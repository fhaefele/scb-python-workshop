# A virtual environment allows you to manage dependencies for different projects separately. 
# In Conda, you can create a virtual environment using the conda create command. 
# Conda supports both long (e.g. `--name`) and short (`-n`) flags when specifying an environment name. 
# You can explore all available flags using: `conda create --help` (or `conda create -h`)
# You can find more information about creating and managing conda environments here:
# https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html 


# Create a virtual environment with Python 3.12. 
conda create --name spyder-env python=3.12

# You can install selected packages when creating an environment.
# Since we want this environment to be conda-forge based, we add the conda-forge channel when calling `conda create`.
# The conda-forge channel is community-run and more up-to-date than the default conda channel.
# conda create --channel conda-forge -n spyder-env python=3.12 spyder spyder-notebook

# Verify that your environment was created by listing all available environments.
conda env list

# Activate the environment
conda activate spyder-env

# List installed packages and verify they were installed from the conda-forge channel
conda list 

# Get more details about the environment and its package repositories
conda info

# Display the current list of active channels
conda config --show channels

# If conda-forge is not listed, add it
conda config --add channels conda-forge

# Verify that the channel was added
conda config --show channels

# Display the environmentâ€™s channel priority and read what exactly that means
conda config --show channel_priority
conda config --describe channel_priority

# Set channel priority to "strict" - this ensures that packages in lower-priority channels 
# are ignored if the same package exists in a higher-priority channel.
conda config --env --set channel_priority strict

# Verify that channel priority has been set correctly
conda config --show channel_priority

# Install packages from conda-forge using conda
conda install spyder spyder-notebook librosa scipy=1.15.1 asciimatics coolname

# Install packages from PyPI using pip
pip install pip-chill pycowsay

# Install a package directly from a GitHub repository
pip install "git+https://github.com/tqdm/tqdm.git@devel#egg=tqdm"  
# Reference: https://github.com/tqdm/tqdm?tab=readme-ov-file#latest-development-release-on-github

# Create an environment file. There are several ways to do this:

# 1) Export installed package names only (not cross-platform)
conda list --export > spyder_env_requirements2.txt 

# 2) Export full environment details, including conda & pip packages with exact versions (not cross-platform)
conda env export > spyder_env_environment.yml  

# 3) Export only explicitly installed packages (cross-platform, but does NOT include pip packages 
# or package versions unless specified during installation)
conda env export --from-history > spyder_env_environment_fh.yml  

# Create an environment from a provided environment file
conda env create -f spyder_env_environment_fh.yml -n shared_env

# Activate the environment, list packages installed in the new environment
conda activate shared_env
conda list

# Get more details about the environment and its package repositories
conda info

# Deactivate and remove the environment 
conda env remove -n shared_env --yes
